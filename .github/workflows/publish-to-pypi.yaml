name: Publish to PyPI

on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build-whl:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python: [ "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14" ]
        exclude:
          - os: windows-latest
            python: "3.14"
          - os: macos-latest
            python: "3.8"
          - os: macos-latest
            python: "3.7"
          - os: ubuntu-latest
            python: "3.7"

    steps:
      - uses: actions/checkout@v4

      - name: Install Python 3.14 with pyenv (if needed)
        if: ${{ matrix.python == '3.14' }}
        run: |
          curl https://pyenv.run | bash
          export PATH="$HOME/.pyenv/bin:$PATH"
          eval "$(pyenv init --path)"
          eval "$(pyenv init -)"
          pyenv install 3.14-dev
          pyenv global 3.14-dev

      - name: Setup Python
        if: ${{ matrix.python != '3.14' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install build tools
        run: pip install build twine wheel

      - name: Build wheel
        run: python -m build --wheel

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: pkg-${{ matrix.os }}-${{ matrix.python }}-${{ strategy.job-index }}
          path: |
            ./dist/*.whl

  build-sdist:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install build tools
        run: pip install build twine wheel

      - name: Build source distribution
        run: python -m build --sdist

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: pkg-sdist
          path: |
            ./dist/*.tar.gz

  publish:
    needs: [build-whl, build-sdist]
    runs-on: ubuntu-latest

    environment:
      name: release
      url: https://pypi.org/project/flask-inputfilter

    permissions:
      id-token: write

    steps:
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
